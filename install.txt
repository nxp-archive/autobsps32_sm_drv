------------------------
   Integration Steps
------------------------

Copyright 2016-2018 NXP

1.) Get Linux BSP for s32v234, version >= 15.0. Yocto can be used which provides all parts:
    - BSP Linux,
    - BSP u-boot,
    - any compatible rootfs.

2.) Apply patches:
    - custom_sm_vector to u-boot,
    - devtree-reserved_memory to Linux (possible to change memory size & address), 
    - fec-separate_queues is not needed for sm_drv (provides separate Ethernet queues not handled by Linux).

3.) Configure u-boot before build:
    - In this option: ARM Architecture -> Support custom secure monitor vector on ARMv8.

4.) Build u-boot and Linux.

5.) Build SM driver against previously built Linux. Example commands:
    cd $SM_DRV_REPOSITORY_DIR/driver &&
    make KERNELDIR=$LINUX_PATH ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu-

6.) Create and build SM application, name the binary theA5App.bin

7.) Load the SM driver which automatically loads firmware, either:
    insmod sm_drv.ko  # loads firmware from /lib/firmware/theA5App.bin (default)
    insmod sm_drv.ko sm_drv_fw=FILE_TO_LOAD  # loads firmware from FILE_TO_LOAD.
